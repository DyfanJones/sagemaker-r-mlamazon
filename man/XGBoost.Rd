% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xgboost_estimator.R
\name{XGBoost}
\alias{XGBoost}
\title{XGBoost Class}
\description{
Handle end-to-end training and deployment of XGBoost booster training or training using
             customer provided XGBoost entry point script.
}
\section{Super classes}{
\code{\link[R6sagemaker.common:EstimatorBase]{R6sagemaker.common::EstimatorBase}} -> \code{\link[R6sagemaker.common:Framework]{R6sagemaker.common::Framework}} -> \code{XGBoost}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{XGBoost$new()}}
\item \href{#method-create_model}{\code{XGBoost$create_model()}}
\item \href{#method-attach}{\code{XGBoost$attach()}}
\item \href{#method-clone}{\code{XGBoost$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="compile_model">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-compile_model}{\code{R6sagemaker.common::EstimatorBase$compile_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="delete_endpoint">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-delete_endpoint}{\code{R6sagemaker.common::EstimatorBase$delete_endpoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="deploy">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-deploy}{\code{R6sagemaker.common::EstimatorBase$deploy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="disable_profiling">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-disable_profiling}{\code{R6sagemaker.common::EstimatorBase$disable_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="enable_default_profiling">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-enable_default_profiling}{\code{R6sagemaker.common::EstimatorBase$enable_default_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="enable_network_isolation">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-enable_network_isolation}{\code{R6sagemaker.common::EstimatorBase$enable_network_isolation()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="fit">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-fit}{\code{R6sagemaker.common::EstimatorBase$fit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="format">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-format}{\code{R6sagemaker.common::EstimatorBase$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="get_vpc_config">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-get_vpc_config}{\code{R6sagemaker.common::EstimatorBase$get_vpc_config()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_debugger_artifacts_path">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-latest_job_debugger_artifacts_path}{\code{R6sagemaker.common::EstimatorBase$latest_job_debugger_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_profiler_artifacts_path">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-latest_job_profiler_artifacts_path}{\code{R6sagemaker.common::EstimatorBase$latest_job_profiler_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_tensorboard_artifacts_path">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-latest_job_tensorboard_artifacts_path}{\code{R6sagemaker.common::EstimatorBase$latest_job_tensorboard_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="logs">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-logs}{\code{R6sagemaker.common::EstimatorBase$logs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="prepare_workflow_for_training">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-prepare_workflow_for_training}{\code{R6sagemaker.common::EstimatorBase$prepare_workflow_for_training()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="register">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-register}{\code{R6sagemaker.common::EstimatorBase$register()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="update_profiler">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-update_profiler}{\code{R6sagemaker.common::EstimatorBase$update_profiler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="EstimatorBase" data-id="wait">}\href{../../R6sagemaker.common/html/EstimatorBase.html#method-wait}{\code{R6sagemaker.common::EstimatorBase$wait()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="Framework" data-id=".prepare_for_training">}\href{../../R6sagemaker.common/html/Framework.html#method-.prepare_for_training}{\code{R6sagemaker.common::Framework$.prepare_for_training()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="Framework" data-id="hyperparameters">}\href{../../R6sagemaker.common/html/Framework.html#method-hyperparameters}{\code{R6sagemaker.common::Framework$hyperparameters()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="Framework" data-id="training_image_uri">}\href{../../R6sagemaker.common/html/Framework.html#method-training_image_uri}{\code{R6sagemaker.common::Framework$training_image_uri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="Framework" data-id="transformer">}\href{../../R6sagemaker.common/html/Framework.html#method-transformer}{\code{R6sagemaker.common::Framework$transformer()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
This ``Estimator`` executes an XGBoost based SageMaker Training Job.
             The managed XGBoost environment is an Amazon-built Docker container thatexecutes functions
             defined in the supplied ``entry_point`` Python script.
             Training is started by calling :meth:`~sagemaker.amazon.estimator.Framework.fit` on this
             Estimator. After training is complete, calling
             :meth:`~sagemaker.amazon.estimator.Framework.deploy` creates a hosted SageMaker endpoint
             and returns an :class:`~sagemaker.amazon.xgboost.model.XGBoostPredictor` instance that
             can be used to perform inference against the hosted model.
             Technical documentation on preparing XGBoost scripts for SageMaker training and using the
             XGBoost Estimator is available on the project home-page:
             https://github.com/aws/sagemaker-python-sdk
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XGBoost$new(
  entry_point,
  framework_version,
  source_dir = NULL,
  hyperparameters = NULL,
  py_version = "py3",
  image_uri = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entry_point}}{(str): Path (absolute or relative) to the Python source file which should
be executed as the entry point to training.  If ``source_dir`` is specified,
then ``entry_point`` must point to a file located at the root of ``source_dir``.}

\item{\code{framework_version}}{(str): XGBoost version you want to use for executing your model
training code.}

\item{\code{source_dir}}{(str): Path (absolute, relative or an S3 URI) to a directory
with any other training source code dependencies aside from the entry
point file (default: None). If ``source_dir`` is an S3 URI, it must
point to a tar.gz file. Structure within this directory are preserved
when training on Amazon SageMaker.}

\item{\code{hyperparameters}}{(dict): Hyperparameters that will be used for training (default: None).
The hyperparameters are made accessible as a dict[str, str] to the training code
on SageMaker. For convenience, this accepts other types for keys and values, but
``str()`` will be called to convert them before training.}

\item{\code{py_version}}{(str): Python version you want to use for executing your model
training code (default: 'py3').}

\item{\code{image_uri}}{(str): If specified, the estimator will use this image for training and
hosting, instead of selecting the appropriate SageMaker official image
based on framework_version and py_version. It can be an ECR url or
dockerhub image and tag.
Examples:
123.dkr.ecr.us-west-2.amazonaws.com/my-custom-image:1.0
custom-image:latest.}

\item{\code{...}}{: Additional kwargs passed to the
:class:`~sagemaker.estimator.Framework` constructor.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_model"></a>}}
\if{latex}{\out{\hypertarget{method-create_model}{}}}
\subsection{Method \code{create_model()}}{
Create a SageMaker ``XGBoostModel`` object that can be deployed to an ``Endpoint``.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XGBoost$create_model(
  model_server_workers = NULL,
  role = NULL,
  vpc_config_override = "VPC_CONFIG_DEFAULT",
  entry_point = NULL,
  source_dir = NULL,
  dependencies = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_server_workers}}{(int): Optional. The number of worker processes used by the
inference server. If None, server will use one worker per vCPU.}

\item{\code{role}}{(str): The ``ExecutionRoleArn`` IAM Role ARN for the ``Model``, which is also used
during transform jobs. If not specified, the role from the Estimator will be used.}

\item{\code{vpc_config_override}}{(dict[str, list[str]]): Optional override for VpcConfig set on the
model.
Default: use subnets and security groups from this Estimator.
* 'Subnets' (list[str]): List of subnet ids.
* 'SecurityGroupIds' (list[str]): List of security group ids.}

\item{\code{entry_point}}{(str): Path (absolute or relative) to the local Python source file which
should be executed as the entry point to training. If ``source_dir`` is specified,
then ``entry_point`` must point to a file located at the root of ``source_dir``.
If not specified, the training entry point is used.}

\item{\code{source_dir}}{(str): Path (absolute or relative) to a directory with any other serving
source code dependencies aside from the entry point file.
If not specified, the model source directory from training is used.}

\item{\code{dependencies}}{(list[str]): A list of paths to directories (absolute or relative) with
any additional libraries that will be exported to the container.
If not specified, the dependencies from training are used.
This is not supported with "local code" in Local Mode.}

\item{\code{...}}{: Additional kwargs passed to the :class:`~sagemaker.xgboost.model.XGBoostModel`
constructor.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
sagemaker.xgboost.model.XGBoostModel: A SageMaker ``XGBoostModel`` object.
             See :func:`~sagemaker.xgboost.model.XGBoostModel` for full details.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-attach"></a>}}
\if{latex}{\out{\hypertarget{method-attach}{}}}
\subsection{Method \code{attach()}}{
Attach to an existing training job.
             Create an Estimator bound to an existing training job, each subclass
             is responsible to implement
             ``_prepare_init_params_from_job_description()`` as this method delegates
             the actual conversion of a training job description to the arguments
             that the class constructor expects. After attaching, if the training job
             has a Complete status, it can be ``deploy()`` ed to create a SageMaker
             Endpoint and return a ``Predictor``.
             If the training job is in progress, attach will block and display log
             messages from the training job, until the training job completes.
             Examples:
             >>> my_estimator.fit(wait=False)
             >>> training_job_name = my_estimator.latest_training_job.name
             Later on:
             >>> attached_estimator = Estimator.attach(training_job_name)
             >>> attached_estimator.deploy()
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XGBoost$attach(
  training_job_name,
  sagemaker_session = NULL,
  model_channel_name = "model"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{training_job_name}}{(str): The name of the training job to attach to.}

\item{\code{sagemaker_session}}{(sagemaker.session.Session): Session object which
manages interactions with Amazon SageMaker APIs and any other
AWS services needed. If not specified, the estimator creates one
using the default AWS configuration chain.}

\item{\code{model_channel_name}}{(str): Name of the channel where pre-trained
model data will be downloaded (default: 'model'). If no channel
with the same name exists in the training job, this option will
be ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Instance of the calling ``Estimator`` Class with the attached
             training job.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XGBoost$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
