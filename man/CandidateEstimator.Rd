% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/automl_candidate_estimator.R
\name{CandidateEstimator}
\alias{CandidateEstimator}
\title{CandidateEstimator Class}
\description{
A class for SageMaker AutoML Job Candidate
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CandidateEstimator$new()}}
\item \href{#method-get_steps}{\code{CandidateEstimator$get_steps()}}
\item \href{#method-fit}{\code{CandidateEstimator$fit()}}
\item \href{#method-format}{\code{CandidateEstimator$format()}}
\item \href{#method-clone}{\code{CandidateEstimator$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructor of CandidateEstimator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CandidateEstimator$new(candidate, sagemaker_session = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{candidate}}{(dict): a dictionary of candidate returned by AutoML.list_candidates()
or AutoML.best_candidate().}

\item{\code{sagemaker_session}}{(sagemaker.session.Session): A SageMaker Session
object, used for SageMaker interactions (default: None). If not
specified, one is created using the default AWS configuration
chain.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_steps"></a>}}
\if{latex}{\out{\hypertarget{method-get_steps}{}}}
\subsection{Method \code{get_steps()}}{
Get the step job of a candidate so that users can construct estimators/transformers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CandidateEstimator$get_steps()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list: a list of dictionaries that provide information about each step job's name,
             type, inputs and description
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fit"></a>}}
\if{latex}{\out{\hypertarget{method-fit}{}}}
\subsection{Method \code{fit()}}{
Rerun a candidate's step jobs with new input datasets or security config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CandidateEstimator$fit(
  inputs,
  candidate_name = NULL,
  volume_kms_key = NULL,
  encrypt_inter_container_traffic = FALSE,
  vpc_config = NULL,
  wait = TRUE,
  logs = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inputs}}{(str or list[str]): Local path or S3 Uri where the training data is stored. If a
local path is provided, the dataset will be uploaded to an S3 location.}

\item{\code{candidate_name}}{(str): name of the candidate to be rerun, if None, candidate's original
name will be used.}

\item{\code{volume_kms_key}}{(str): The KMS key id to encrypt data on the storage volume attached to
the ML compute instance(s).}

\item{\code{encrypt_inter_container_traffic}}{(bool): To encrypt all communications between ML compute
instances in distributed training. Default: False.}

\item{\code{vpc_config}}{(dict): Specifies a VPC that jobs and hosted models have access to.
Control access to and from training and model containers by configuring the VPC}

\item{\code{wait}}{(bool): Whether the call should wait until all jobs completes (default: True).}

\item{\code{logs}}{(bool): Whether to show the logs produced by the job.
Only meaningful when wait is True (default: True).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
format class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CandidateEstimator$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CandidateEstimator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
