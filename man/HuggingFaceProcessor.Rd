% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/huggingface_processing.R
\name{HuggingFaceProcessor}
\alias{HuggingFaceProcessor}
\title{HuggingFaceProcessor class}
\description{
Handles Amazon SageMaker processing tasks for jobs using HuggingFace containers.
}
\section{Super classes}{
\code{\link[sagemaker.common:Processor]{sagemaker.common::Processor}} -> \code{\link[sagemaker.common:ScriptProcessor]{sagemaker.common::ScriptProcessor}} -> \code{\link[sagemaker.common:FrameworkProcessor]{sagemaker.common::FrameworkProcessor}} -> \code{HuggingFaceProcessor}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{estimator_cls}}{Estimator object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{HuggingFaceProcessor$new()}}
\item \href{#method-clone}{\code{HuggingFaceProcessor$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="Processor" data-id="format">}\href{../../sagemaker.common/html/Processor.html#method-format}{\code{sagemaker.common::Processor$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="FrameworkProcessor" data-id="get_run_args">}\href{../../sagemaker.common/html/FrameworkProcessor.html#method-get_run_args}{\code{sagemaker.common::FrameworkProcessor$get_run_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="FrameworkProcessor" data-id="run">}\href{../../sagemaker.common/html/FrameworkProcessor.html#method-run}{\code{sagemaker.common::FrameworkProcessor$run()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
This processor executes a Python script in a HuggingFace execution environment.
             Unless ``image_uri`` is specified, the environment is an Amazon-built Docker container
             that executes functions defined in the supplied ``code`` Python script.
             The arguments have the same meaning as in ``FrameworkProcessor``, with the following
             exceptions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HuggingFaceProcessor$new(
  role,
  instance_count,
  instance_type,
  transformers_version = NULL,
  tensorflow_version = NULL,
  pytorch_version = NULL,
  py_version = "py36",
  image_uri = NULL,
  command = NULL,
  volume_size_in_gb = 30,
  volume_kms_key = NULL,
  output_kms_key = NULL,
  code_location = NULL,
  max_runtime_in_seconds = NULL,
  base_job_name = NULL,
  sagemaker_session = NULL,
  env = NULL,
  tags = NULL,
  network_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{role}}{(str): An AWS IAM role name or ARN. Amazon SageMaker Processing uses
this role to access AWS resources, such as data stored in Amazon S3.}

\item{\code{instance_count}}{(int): The number of instances to run a processing job with.}

\item{\code{instance_type}}{(str): The type of EC2 instance to use for processing, for
example, 'ml.c4.xlarge'.}

\item{\code{transformers_version}}{(str): Transformers version you want to use for
executing your model training code. Defaults to ``None``. Required unless
``image_uri`` is provided. The current supported version is ``4.4.2``.}

\item{\code{tensorflow_version}}{(str): TensorFlow version you want to use for
executing your model training code. Defaults to ``None``. Required unless
``pytorch_version`` is provided. The current supported version is ``1.6.0``.}

\item{\code{pytorch_version}}{(str): PyTorch version you want to use for
executing your model training code. Defaults to ``None``. Required unless
``tensorflow_version`` is provided. The current supported version is ``2.4.1``.}

\item{\code{py_version}}{(str): Python version you want to use for executing your model training
code. Defaults to ``None``. Required unless ``image_uri`` is provided.  If
using PyTorch, the current supported version is ``py36``. If using TensorFlow,
the current supported version is ``py37``.}

\item{\code{image_uri}}{(str): The URI of the Docker image to use for the
processing jobs (default: None).}

\item{\code{command}}{([str]): The command to run, along with any command-line flags
to *precede* the ```code script```. Example: ["python3", "-v"]. If not
provided, ["python"] will be chosen (default: None).}

\item{\code{volume_size_in_gb}}{(int): Size in GB of the EBS volume
to use for storing data during processing (default: 30).}

\item{\code{volume_kms_key}}{(str): A KMS key for the processing volume (default: None).}

\item{\code{output_kms_key}}{(str): The KMS key ID for processing job outputs (default: None).}

\item{\code{code_location}}{(str): The S3 prefix URI where custom code will be
uploaded (default: None). The code file uploaded to S3 is
'code_location/job-name/source/sourcedir.tar.gz'. If not specified, the
default ``code location`` is 's3://{sagemaker-default-bucket}'}

\item{\code{max_runtime_in_seconds}}{(int): Timeout in seconds (default: None).
After this amount of time, Amazon SageMaker terminates the job,
regardless of its current status. If `max_runtime_in_seconds` is not
specified, the default value is 24 hours.}

\item{\code{base_job_name}}{(str): Prefix for processing name. If not specified,
the processor generates a default job name, based on the
processing image name and current timestamp (default: None).}

\item{\code{sagemaker_session}}{(:class:`~sagemaker.session.Session`):
Session object which manages interactions with Amazon SageMaker and
any other AWS services needed. If not specified, the processor creates
one using the default AWS configuration chain (default: None).}

\item{\code{env}}{(dict[str, str]): Environment variables to be passed to
the processing jobs (default: None).}

\item{\code{tags}}{(list[dict]): List of tags to be passed to the processing job
(default: None). For more, see
\url{https://docs.aws.amazon.com/sagemaker/latest/dg/API_Tag.html}.}

\item{\code{network_config}}{(:class:`~sagemaker.network.NetworkConfig`):
A :class:`~sagemaker.network.NetworkConfig`
object that configures network isolation, encryption of
inter-container traffic, security group IDs, and subnets (default: None).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HuggingFaceProcessor$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
