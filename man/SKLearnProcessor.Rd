% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sklearn_processing.R
\name{SKLearnProcessor}
\alias{SKLearnProcessor}
\title{SKLearnProcessor Class}
\description{
Handles Amazon SageMaker processing tasks for jobs using scikit-learn.
}
\section{Super classes}{
\code{\link[R6sagemaker.common:Processor]{R6sagemaker.common::Processor}} -> \code{\link[R6sagemaker.common:ScriptProcessor]{R6sagemaker.common::ScriptProcessor}} -> \code{SKLearnProcessor}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SKLearnProcessor$new()}}
\item \href{#method-clone}{\code{SKLearnProcessor$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="Processor" data-id="format">}\href{../../R6sagemaker.common/html/Processor.html#method-format}{\code{R6sagemaker.common::Processor$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.common" data-topic="ScriptProcessor" data-id="run">}\href{../../R6sagemaker.common/html/ScriptProcessor.html#method-run}{\code{R6sagemaker.common::ScriptProcessor$run()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize an ``SKLearnProcessor`` instance. The SKLearnProcessor
             handles Amazon SageMaker processing tasks for jobs using scikit-learn.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SKLearnProcessor$new(
  framework_version,
  role,
  instance_type,
  instance_count,
  command = NULL,
  volume_size_in_gb = 30,
  volume_kms_key = NULL,
  output_kms_key = NULL,
  max_runtime_in_seconds = NULL,
  base_job_name = NULL,
  sagemaker_session = NULL,
  env = NULL,
  tags = NULL,
  network_config = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{framework_version}}{(str): The version of scikit-learn.}

\item{\code{role}}{(str): An AWS IAM role name or ARN. The Amazon SageMaker training jobs
and APIs that create Amazon SageMaker endpoints use this role
to access training data and model artifacts. After the endpoint
is created, the inference code might use the IAM role, if it
needs to access an AWS resource.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use for
processing, for example, 'ml.c4.xlarge'.}

\item{\code{instance_count}}{(int): The number of instances to run
the Processing job with. Defaults to 1.}

\item{\code{command}}{([str]): The command to run, along with any command-line flags.
Example: ["python3", "-v"]. If not provided, ["python3"] or ["python2"]
will be chosen based on the py_version parameter.}

\item{\code{volume_size_in_gb}}{(int): Size in GB of the EBS volume to
use for storing data during processing (default: 30).}

\item{\code{volume_kms_key}}{(str): A KMS key for the processing
volume.}

\item{\code{output_kms_key}}{(str): The KMS key id for all ProcessingOutputs.}

\item{\code{max_runtime_in_seconds}}{(int): Timeout in seconds.
After this amount of time Amazon SageMaker terminates the job
regardless of its current status.}

\item{\code{base_job_name}}{(str): Prefix for processing name. If not specified,
the processor generates a default job name, based on the
training image name and current timestamp.}

\item{\code{sagemaker_session}}{(sagemaker.session.Session): Session object which
manages interactions with Amazon SageMaker APIs and any other
AWS services needed. If not specified, the processor creates one
using the default AWS configuration chain.}

\item{\code{env}}{(dict): Environment variables to be passed to the processing job.}

\item{\code{tags}}{([dict]): List of tags to be passed to the processing job.}

\item{\code{network_config}}{(sagemaker.network.NetworkConfig): A NetworkConfig
object that configures network isolation, encryption of
inter-container traffic, security group IDs, and subnets.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SKLearnProcessor$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
